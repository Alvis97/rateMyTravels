// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String          @id @default(cuid())
  email            String          @unique
  firstName        String
  lastName         String
  age              Int
  gender           String
  password         String
  Image            String
  visitedCountries VisitedCountry[] // Define the relation
  accounts         Account[]
}

model VisitedCountry {
  id                  String    @id @default(cuid()) 
  userId              String    // User ID of the user who visited
  countryInitials     String    // Initials of the country (same as the name of the country)
  safetyRating        Int
  soloFriendlyRating  Int
  queerFriendlyRating Int
  englishLevelRating  Int
  priceRating         Int
  user                User      @relation(fields: [userId], references: [id]) // Define the opposite relation
}

model EuCountry {
  id                        String  @id @default(cuid())
  countryName               String
  countryInitials           String
  averageSafetyRating       Int
  averageSoloFriendlyRating Int
  averageQueerFriendlyRating Int
  averageEnglishLevelRating Int
  averagePriceRating        Int
}

model Account {
  id                    String  @id() @default(uuid())
  userId                String
  type                  String
  provider              String
  providerAccountId     String
  refresh_token         String?
  refresh_token_expires_in Int?
  access_token          String?
  expires_at            Int?
  token_type            String?
  scope                 String?
  id_token              String?
  session_state         String?
  user                  User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

